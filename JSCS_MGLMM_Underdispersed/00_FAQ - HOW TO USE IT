# HOW TO USE THE CODE

## ExampleWithRealData 
This folder contains a toy and 'fast' example on how to use the MGLMM.

go to the 01_poisson_multivariate.R code and run it. Then go to Negbin.R and lastly for Comp.R (Comp for COM-Poisson). Be careful, COM-Poisson can take several hours or don't run if your machine has memory < 16Gb.	
I used as input values for the parameters the old results from my models. That's way the .RData files.
The files {02_poisson_multivariate, compoisson_multi, negbin_multivariate}.cpp are the template TMB files. 

For DoublePoisson, it is necessary to copy the file double_distributions.hpp which it is in the root into the include file of TMB folder, in my case was: ~/R/x86_64-pc-linux-gnu-library/4.2/TMB/include

## CODE_AS_IT_IS

This folder is the same content used to generate results to the paper. There are a lot of files. Inside of '~/Code_As_It_is' there some template files and some .cpp files that I used. Go straight to '~/Code_As_It_is/Servidor' ('servidor' means server). Inside, there are other .cpp files and you don't need care about it right now (but you can just look how to write a .cpp for a model for example). Then, go to '~/Code_As_It_is/Servidor/NHANES_DATA'. The folder 'Full' means the fully parametrized model. The folder 'SmallerModels' means models with correlation set to 0, common variance and so on. The way to run is the same logical as the toy example: 1ยบ Server_Poisson.R; 2ยบ Server_Negbin.R; 3ยบ Server_Comp.R. Some codes are commented and you may need to uncomment it and run. I will give general details of the code:

1) Specially COM-Poisson are time consuming. That's way I had to separate the code in several files and had to use copy and paste a lot.
2) `sv()` and `sv_sd()` functions are used to organize the output from `TMB` package.
3) The logical sequence of running is the same as showed in the paper.
4) Sometimes I wrote in portuguese, as it is my mother language.
5) Variable selection and some graphics in the paper was made in the code Server_Melhores_v2.R for full models.
6) `read_data.R` shows the goodness-of-fit table
7) `extraindo_coeffs.R` I used for graphs.

In the folder Smaller Models shows simpler versions of Full model:

1) {Compoisson,Negbin, DoublePoisson}_{nu,phi}_fixed_XX -> means parameter dispersion fixed with the specified XX value
2) {Compoisson Negbin, DoublePoisson}_var_comum -> means common variance value to all variance parameters
3) {Compoisson, negbin, DoublePoisson}_var_fixed -> Means variance parameter fixed to a constant value
4) {Compoisson, Negbin, Poisson, DoublePoisson} ->  Means rho fixed at 0 -> independent responses

Some models were necessary to separate between sample and dataset due to memory issues.

A common error is error c stack usage is too close to the limit. In this case, you can increase c stack usage memory or use config(tape.parallel = FALSE, model  = model) to finish the estimation process.

## DESCRIPTIVE_ANALYSIS
The folder Descriptive_Analysis contains the dataset and descriptive analysis used in the article. You can go straight to `NHANES.R` function and use it. `clean_nhanes.R` organize the data provided from the website of the survey.
